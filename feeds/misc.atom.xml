<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>SimonsBlog - misc</title><link href="http://simonsblog.co.uk/" rel="alternate"></link><link href="http://simonsblog.co.uk/feeds/misc.atom.xml" rel="self"></link><id>http://simonsblog.co.uk/</id><updated>2017-06-28T23:03:00+01:00</updated><entry><title>Collected rules</title><link href="http://simonsblog.co.uk/collected-rules.html" rel="alternate"></link><published>2017-06-28T23:03:00+01:00</published><updated>2017-06-28T23:03:00+01:00</updated><author><name>Simon</name></author><id>tag:simonsblog.co.uk,2017-06-28:/collected-rules.html</id><summary type="html">&lt;p&gt;Taken from the excellent book &lt;a class="reference external" href="https://www.amazon.co.uk/Practice-Programming-Professional-Computing/dp/020161586X"&gt;The Practice of Programming&lt;/a&gt; as relevant now as it was back when it was published.&lt;/p&gt;
&lt;div class="section" id="style"&gt;
&lt;h2&gt;Style&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use descriptive names for globals, short names for locals.&lt;/li&gt;
&lt;li&gt;Be consistent.&lt;/li&gt;
&lt;li&gt;Use active names for functions.&lt;/li&gt;
&lt;li&gt;Be accurate.&lt;/li&gt;
&lt;li&gt;Indent to show structure.&lt;/li&gt;
&lt;li&gt;Use the natural form for expression.&lt;/li&gt;
&lt;li&gt;Parenthesize …&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Taken from the excellent book &lt;a class="reference external" href="https://www.amazon.co.uk/Practice-Programming-Professional-Computing/dp/020161586X"&gt;The Practice of Programming&lt;/a&gt; as relevant now as it was back when it was published.&lt;/p&gt;
&lt;div class="section" id="style"&gt;
&lt;h2&gt;Style&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Use descriptive names for globals, short names for locals.&lt;/li&gt;
&lt;li&gt;Be consistent.&lt;/li&gt;
&lt;li&gt;Use active names for functions.&lt;/li&gt;
&lt;li&gt;Be accurate.&lt;/li&gt;
&lt;li&gt;Indent to show structure.&lt;/li&gt;
&lt;li&gt;Use the natural form for expression.&lt;/li&gt;
&lt;li&gt;Parenthesize to resolve ambiguity.&lt;/li&gt;
&lt;li&gt;Break up complex expressions.&lt;/li&gt;
&lt;li&gt;Be clear.&lt;/li&gt;
&lt;li&gt;Be careful with side effects.&lt;/li&gt;
&lt;li&gt;Use a consistent indentation and brace style.&lt;/li&gt;
&lt;li&gt;Use idioms for consistency.&lt;/li&gt;
&lt;li&gt;Use else-ifsfor multi-way decisions.&lt;/li&gt;
&lt;li&gt;Avoid function macros.&lt;/li&gt;
&lt;li&gt;Parenthesize the macro body and arguments.&lt;/li&gt;
&lt;li&gt;Give names to magic numbers.&lt;/li&gt;
&lt;li&gt;Define numbers as constants, not macros.&lt;/li&gt;
&lt;li&gt;Use character constants, not integers.&lt;/li&gt;
&lt;li&gt;Use the language to calculate the size of an object.&lt;/li&gt;
&lt;li&gt;Don't belabour the obvious.&lt;/li&gt;
&lt;li&gt;Comment functions and global data.&lt;/li&gt;
&lt;li&gt;Don't comment bad code, rewrite it.&lt;/li&gt;
&lt;li&gt;Clarify, don't confuse.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="interfaces"&gt;
&lt;h2&gt;Interfaces&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Hide implementation details.&lt;/li&gt;
&lt;li&gt;Choose a small orthogonal set of primitives.&lt;/li&gt;
&lt;li&gt;Don't reach behind the user's back.&lt;/li&gt;
&lt;li&gt;Do the same thing the same way everywhere.&lt;/li&gt;
&lt;li&gt;Free a resource in the same layer that allocated it.&lt;/li&gt;
&lt;li&gt;Detect errors at a low level, handle them at a high level.&lt;/li&gt;
&lt;li&gt;Use exceptions only for exceptional situations.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="debugging"&gt;
&lt;h2&gt;Debugging&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Look for familiar patterns.&lt;/li&gt;
&lt;li&gt;Examine the most recent change.&lt;/li&gt;
&lt;li&gt;Don't make the same mistake twice.&lt;/li&gt;
&lt;li&gt;Debug it now, not later.&lt;/li&gt;
&lt;li&gt;Get a stack trace.&lt;/li&gt;
&lt;li&gt;Read before typing.&lt;/li&gt;
&lt;li&gt;Explain your code to someone else.&lt;/li&gt;
&lt;li&gt;Make the bug reproducible.&lt;/li&gt;
&lt;li&gt;Divide and conquer.&lt;/li&gt;
&lt;li&gt;Study the numerology of failures.&lt;/li&gt;
&lt;li&gt;Display output to localise your search.&lt;/li&gt;
&lt;li&gt;Write self-checking code.&lt;/li&gt;
&lt;li&gt;Write a log file.&lt;/li&gt;
&lt;li&gt;Draw a picture.&lt;/li&gt;
&lt;li&gt;Use tools.&lt;/li&gt;
&lt;li&gt;Keep records.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="testing"&gt;
&lt;h2&gt;Testing&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Test code at its boundaries.&lt;/li&gt;
&lt;li&gt;Tes pre- and post-conditions.&lt;/li&gt;
&lt;li&gt;Use assertions.&lt;/li&gt;
&lt;li&gt;Program defensively.&lt;/li&gt;
&lt;li&gt;Check error returns.&lt;/li&gt;
&lt;li&gt;Test incrementally.&lt;/li&gt;
&lt;li&gt;Test simple parts first.&lt;/li&gt;
&lt;li&gt;Know what output to expect.&lt;/li&gt;
&lt;li&gt;Verify conservation properties.&lt;/li&gt;
&lt;li&gt;Compare independent implementations.&lt;/li&gt;
&lt;li&gt;Measure test coverage.&lt;/li&gt;
&lt;li&gt;Automate regression testing.&lt;/li&gt;
&lt;li&gt;Create self-contained tests.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="performance"&gt;
&lt;h2&gt;Performance&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Automate timing measurements.&lt;/li&gt;
&lt;li&gt;Use a profiler.&lt;/li&gt;
&lt;li&gt;Concentrate on the hot spots.&lt;/li&gt;
&lt;li&gt;Draw a picture.&lt;/li&gt;
&lt;li&gt;Use a better algorithm or data structure.&lt;/li&gt;
&lt;li&gt;Enable compiler optimizations.&lt;/li&gt;
&lt;li&gt;Tune the code.&lt;/li&gt;
&lt;li&gt;Don't optimise what doesn't matter.&lt;/li&gt;
&lt;li&gt;Collect common subexpressions.&lt;/li&gt;
&lt;li&gt;Replace expensive operations by cheap ones.&lt;/li&gt;
&lt;li&gt;Unroll or eliminate loops.&lt;/li&gt;
&lt;li&gt;Cache frequently-used values.&lt;/li&gt;
&lt;li&gt;Write a special-purpose allocator.&lt;/li&gt;
&lt;li&gt;Buffer input and output.&lt;/li&gt;
&lt;li&gt;Handle special cases separately.&lt;/li&gt;
&lt;li&gt;Precompute results.&lt;/li&gt;
&lt;li&gt;Use approximate values.&lt;/li&gt;
&lt;li&gt;Rewrite in a lower-level language.&lt;/li&gt;
&lt;li&gt;Save space by using the smallest possible data type.&lt;/li&gt;
&lt;li&gt;Don't store what you can easily recompute.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div class="section" id="portability"&gt;
&lt;h2&gt;Portability&lt;/h2&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Stick to the standard.&lt;/li&gt;
&lt;li&gt;Program in the mainstream.&lt;/li&gt;
&lt;li&gt;Beware of language trouble spots.&lt;/li&gt;
&lt;li&gt;Try several compilers.&lt;/li&gt;
&lt;li&gt;Use standard libraries.&lt;/li&gt;
&lt;li&gt;Use only features available everywhere.&lt;/li&gt;
&lt;li&gt;Avoid conditional compilation.&lt;/li&gt;
&lt;li&gt;Localise system dependencies in separate files.&lt;/li&gt;
&lt;li&gt;Hide system dependencies behind interfaces.&lt;/li&gt;
&lt;li&gt;Use text for data exchange.&lt;/li&gt;
&lt;li&gt;Use a fixed byte order for data exchange.&lt;/li&gt;
&lt;li&gt;Change the name if you change the specification.&lt;/li&gt;
&lt;li&gt;Maintain compatibility with existing programs and data.&lt;/li&gt;
&lt;li&gt;Don't assume ASCII.&lt;/li&gt;
&lt;li&gt;Don't assume English.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</content><category term="python"></category><category term="quotes"></category><category term="linux"></category></entry><entry><title>Switching from Gmail to Fastmail</title><link href="http://simonsblog.co.uk/switching-from-gmail-to-fastmail.html" rel="alternate"></link><published>2013-12-06T14:16:00+00:00</published><updated>2013-12-06T14:16:00+00:00</updated><author><name>Simon</name></author><id>tag:simonsblog.co.uk,2013-12-06:/switching-from-gmail-to-fastmail.html</id><summary type="html">&lt;img alt="Fastmail.fm page header" class="align-center" src="/images/fastmail/header-thumb.png" style="width: 400px; height: 143px;" /&gt;
&lt;p&gt;&lt;a class="reference external" href="/images/fastmail/header.png"&gt;Large image&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Three months ago I decided to try out &lt;a class="reference external" href="http://www.fastmail.to/?STKI=11487141"&gt;fastmail.fm&lt;/a&gt; after having used
google's &lt;a class="reference external" href="https://gmail.google.com"&gt;gmail&lt;/a&gt; as my primary email for a number of years. I kept seeing
a number of people moving away from google after the &lt;a class="reference external" href="http://www.theguardian.com/world/the-nsa-files"&gt;NSA revelations&lt;/a&gt;  and
the admission that &lt;a class="reference external" href="http://www.theguardian.com/technology/2013/aug/14/google-gmail-users-privacy-email-lawsuit"&gt;gmail users cannot expect privacy …&lt;/a&gt;&lt;/p&gt;</summary><content type="html">&lt;img alt="Fastmail.fm page header" class="align-center" src="/images/fastmail/header-thumb.png" style="width: 400px; height: 143px;" /&gt;
&lt;p&gt;&lt;a class="reference external" href="/images/fastmail/header.png"&gt;Large image&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Three months ago I decided to try out &lt;a class="reference external" href="http://www.fastmail.to/?STKI=11487141"&gt;fastmail.fm&lt;/a&gt; after having used
google's &lt;a class="reference external" href="https://gmail.google.com"&gt;gmail&lt;/a&gt; as my primary email for a number of years. I kept seeing
a number of people moving away from google after the &lt;a class="reference external" href="http://www.theguardian.com/world/the-nsa-files"&gt;NSA revelations&lt;/a&gt;  and
the admission that &lt;a class="reference external" href="http://www.theguardian.com/technology/2013/aug/14/google-gmail-users-privacy-email-lawsuit"&gt;gmail users cannot expect privacy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I have no complaints about using &lt;a class="reference external" href="https://gmail.google.com"&gt;gmail&lt;/a&gt; all these years, for a free service
it is better than most other free options and their service has never been
down or caused me any issues.&lt;/p&gt;
&lt;p&gt;However you do end up living in this &lt;strong&gt;google product world&lt;/strong&gt;, an all
encompassing world in which they will end up knowing more about you than
even your family will know about you.&lt;/p&gt;
&lt;p&gt;If something is free is it really right
to expect privacy? Which goes along with the saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;&amp;quot;If you don't pay for the product, then you are the product&lt;/em&gt;&amp;quot;.&lt;/blockquote&gt;
&lt;p&gt;Maybe this is true, in which case you need to look at other options,
&lt;a class="reference external" href="http://www.fastmail.to/?STKI=11487141"&gt;fastmail.fm&lt;/a&gt; was one of those options.
Their offer of &lt;em&gt;Providing a Reliable and Clutter-Free Email Experience&lt;/em&gt; who
take privacy seriously, was attractive. While they also suggest that being an
Australian company, they &lt;a class="reference external" href="http://www.theguardian.com/technology/2013/oct/07/australias-fastmail-secure-email-nsa"&gt;fall outside the (US) NSA's jurisdiction&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;So I initially signed up for a free trial account on the Enhanced ($40 a year)
account, which includes:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;15 GB email storage&lt;/li&gt;
&lt;li&gt;5 GB file storage&lt;/li&gt;
&lt;li&gt;Use your own domain&lt;/li&gt;
&lt;li&gt;No included SMS&lt;/li&gt;
&lt;li&gt;Advanced anti-spam&lt;/li&gt;
&lt;li&gt;No ads&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can choose an email address from a substantial (~115)
list of &lt;em&gt;fastmail&lt;/em&gt; like top level domains, a selection being:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;fastmail.fm&lt;/li&gt;
&lt;li&gt;fastmail.to&lt;/li&gt;
&lt;li&gt;fastmail.us&lt;/li&gt;
&lt;li&gt;fastmail.cn&lt;/li&gt;
&lt;li&gt;fastmail.com.au&lt;/li&gt;
&lt;li&gt;fastmail.jp&lt;/li&gt;
&lt;li&gt;fastmail.net&lt;/li&gt;
&lt;li&gt;fastmail.es&lt;/li&gt;
&lt;li&gt;fastmail.co.uk&lt;/li&gt;
&lt;li&gt;fastmail.in&lt;/li&gt;
&lt;li&gt;fastmail.im&lt;/li&gt;
&lt;li&gt;fastmail.nl&lt;/li&gt;
&lt;li&gt;fastmail.se&lt;/li&gt;
&lt;li&gt;fastmail.mx&lt;/li&gt;
&lt;li&gt;fastmail.tw&lt;/li&gt;
&lt;li&gt;fmail.co.uk&lt;/li&gt;
&lt;li&gt;sent.com&lt;/li&gt;
&lt;li&gt;myfastmail.com&lt;/li&gt;
&lt;li&gt;speedymail.org&lt;/li&gt;
&lt;li&gt;fast-email.com&lt;/li&gt;
&lt;li&gt;fastimap.com&lt;/li&gt;
&lt;li&gt;fast-mail.org&lt;/li&gt;
&lt;li&gt;fastemail.us&lt;/li&gt;
&lt;li&gt;operamail.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After which I set up my fastmail account to use my own domain name, simonsblog.co.uk.
So I switched my DNS MX records via my &lt;a class="reference external" href="https://dnsimple.com/r/3d06c548b79445"&gt;dnsimple&lt;/a&gt; DNS hosting provider
to point to fastmails servers. Fastmail do offer to handle DNS
for you, but I'm already happily using the excellent service provided by
&lt;a class="reference external" href="https://dnsimple.com/r/3d06c548b79445"&gt;dnsimple&lt;/a&gt; for all my DNS hosting.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;simon@X220:~$ dig +short simonsblog.co.uk mx
&lt;span class="m"&gt;20&lt;/span&gt; in2-smtp.messagingengine.com.
&lt;span class="m"&gt;10&lt;/span&gt; in1-smtp.messagingengine.com.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Added an SPF record.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;simon@X220:~$ dig simonsblog.co.uk +short spf
&lt;span class="s2"&gt;&amp;quot;v=spf1 include:spf.messagingengine.com -all&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I then added a TXT record for my DKIM key, retrieved via Fastmail.fm -&amp;gt;
Advanced settings -&amp;gt; Virtual Domains&lt;/p&gt;
&lt;p&gt;I also set up an alias (CNAME) to access webmail via my domain.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;simon@X220:~$ dig +short mail.simonsblog.co.uk cname
www.fastmail.fm.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;While under this free trial, &lt;a class="reference external" href="http://www.fastmail.to/?STKI=11487141"&gt;fastmail.fm&lt;/a&gt; announced that &lt;a class="reference external" href="http://blog.fastmail.fm/2013/09/25/exciting-news-fastmail-staff-purchase-the-business-from-opera/"&gt;staff had purchased the
business back from opera&lt;/a&gt; which was getting noticed on &lt;a class="reference external" href="https://twitter.com/jacobian/status/383084245784076288"&gt;twitter&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;This is a key issue for me, for staff to un-acquire itself just shows the belief
the team have in it.&lt;/p&gt;
&lt;p&gt;So three months in and I'm happily switched to using &lt;a class="reference external" href="http://www.fastmail.to/?STKI=11487141"&gt;fastmail.fm&lt;/a&gt; as my primary
email address. Some nice features are:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Fast loading&lt;/li&gt;
&lt;li&gt;Infinite scrolling&lt;/li&gt;
&lt;li&gt;Extensive configuration&lt;/li&gt;
&lt;li&gt;Ad free&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some not nice features:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;No native mobile app (I'm using &lt;a class="reference external" href="https://play.google.com/store/apps/details?id=com.maildroid.pro&amp;amp;hl=en"&gt;MailDroid Pro&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I haven't totally unplugged myself from gmail, I still forward all gmail to
my fastmail account, but these are becoming less and less as I move more
accounts over to use my new address.&lt;/p&gt;
&lt;p&gt;The process to switch has been relatively pain free and for $40
a year seems a small price to pay to have secure and private email.&lt;/p&gt;
</content><category term="email"></category></entry><entry><title>The Psychology of Computer Programming</title><link href="http://simonsblog.co.uk/the-psychology-of-computer-programming.html" rel="alternate"></link><published>2013-01-26T15:29:00+00:00</published><updated>2013-01-26T15:29:00+00:00</updated><author><name>Simon</name></author><id>tag:simonsblog.co.uk,2013-01-26:/the-psychology-of-computer-programming.html</id><summary type="html">&lt;img alt="The Psychology of Computer Programming Book" class="align-center" src="/images/psychology-cp/book-thumb.png" style="width: 394px; height: 297px;" /&gt;
&lt;p&gt;&lt;a class="reference external" href="/images/psychology-cp/book.png"&gt;Book cover&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The book &lt;a class="reference external" href="http://www.amazon.co.uk/Psychology-Computer-Programming-Silver-Anniversary/dp/0932633420"&gt;The Psychology of Computer Programming&lt;/a&gt; by Gerald M. Weinberg has
been on my wish list for a while, ever since reading the
&lt;a class="reference external" href="http://www.catb.org/esr/writings/homesteading/cathedral-bazaar/"&gt;cathedral &amp;amp; the bazaar&lt;/a&gt; by &lt;a class="reference external" href="http://esr.ibiblio.org/"&gt;Eric S. Raymond&lt;/a&gt;, in which he talks about how
working using the open source approach can not only work on …&lt;/p&gt;</summary><content type="html">&lt;img alt="The Psychology of Computer Programming Book" class="align-center" src="/images/psychology-cp/book-thumb.png" style="width: 394px; height: 297px;" /&gt;
&lt;p&gt;&lt;a class="reference external" href="/images/psychology-cp/book.png"&gt;Book cover&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The book &lt;a class="reference external" href="http://www.amazon.co.uk/Psychology-Computer-Programming-Silver-Anniversary/dp/0932633420"&gt;The Psychology of Computer Programming&lt;/a&gt; by Gerald M. Weinberg has
been on my wish list for a while, ever since reading the
&lt;a class="reference external" href="http://www.catb.org/esr/writings/homesteading/cathedral-bazaar/"&gt;cathedral &amp;amp; the bazaar&lt;/a&gt; by &lt;a class="reference external" href="http://esr.ibiblio.org/"&gt;Eric S. Raymond&lt;/a&gt;, in which he talks about how
working using the open source approach can not only work on small-large scale
projects, but how it seems to be the best way software
developers can work together, from disparate parts of the world.&lt;/p&gt;
&lt;p&gt;Eric cites the book &lt;a class="reference external" href="http://www.amazon.co.uk/Psychology-Computer-Programming-Silver-Anniversary/dp/0932633420"&gt;The Psychology of Computer Programming&lt;/a&gt;, saying:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;Gerald M. Weinberg's The Psychology Of Computer Programming (New York, Van
Nostrand Reinhold 1971) introduced the rather unfortunately-labeled concept
of &lt;strong&gt;egoless programming&lt;/strong&gt;. While he was nowhere near the first person to
realize the futility of the &lt;strong&gt;principle of command&lt;/strong&gt;, he was probably the
first to recognize and argue the point in particular connection with
software development.&amp;quot;&lt;/p&gt;
&lt;p class="attribution"&gt;&amp;mdash;&lt;a class="reference external" href="http://esr.ibiblio.org/"&gt;Eric S. Raymond&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Having requested the book as an xmas gift, I finally had a copy of the
silver anniversary edition (published back in 1998). The original edition was
published way back in 1971, but do not let this put you off, as the ideas
and experiences are still as relevant today as they were, way back in 1971.&lt;/p&gt;
&lt;p&gt;This is not a long review of the book, more a recommendation to read it if you
are a programmer or a manager of programmers, as it may probably change the
way you program and interact with other programmers, and can make you
a better manager.&lt;/p&gt;
&lt;p&gt;He tackles many issues in this book, focusing on the human side of being a
programmer. If you have worked alongside other programmers or managed a
group of programmers, you will find yourself nodding your head at so many
stages in this book. He highlights why teams work or do not work well
together. Why some managers are hopeless and others excel, and what we
as programmers and managers can do to improve our jobs and working
environment, so we can hopefully think differently and understand more about
what we do, and why we do it.&lt;/p&gt;
&lt;p&gt;Some highlights for me include:&lt;/p&gt;
&lt;p&gt;In chapter 5 &amp;quot;The Programming Team&amp;quot; he talks about managers and leadership
and how dealing with higher management can be problematic and strained, but
good managers understand that results will be far more easily obtained if
all the team is on-board and each team member has full participation.&lt;/p&gt;
&lt;p&gt;On dealing with upper management:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;quot;he must be willing to stake his position as
designated leader on the strength of his professional judgement&amp;quot;.&lt;/p&gt;
&lt;p&gt;&amp;quot;One of the paradoxes of leadership is simply
this: only the leader who is ready to step down has a real chance of success.&amp;quot;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In chapter 6 &amp;quot;The Programming Project&amp;quot; he talks about how teams work together,
and if a manager wants to have a stable project/team,  touching on the
&lt;a class="reference external" href="http://en.wikipedia.org/wiki/Egoless_programming"&gt;egoless programming&lt;/a&gt; idea.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;If a programmer is indispensable, get rid of him as quickly as possible.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;He also observes the gender inequality in programming teams, when women are part of
a team.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Each prejudice has its price. In a programming project, the
exclusion of anyone from any position on any basis besides lack of
competence robs the project of the best possible performance. Moreover,
once one faction begins to feel that they are being judged differently
from others, they will begin to act differently.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;In chapter 11 &amp;quot;Programming Languages&amp;quot; he talks of the drive to improve
programming languages to be more natural, less complex.&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;It is a psychological difficulty which prevents us from writing our
problem specifications directly in machine language. Let's face up
to it: people don't think the same way that computers do - that's why
we use computers. Programming is at best a communication between two
alien species, and programming languages with all their systems
paraphernalia are an attempt to make communication simpler for one of
those species. Which one? Not the computer, certainly, for nobody
ever heard a complaint from a computer that it couldn't do the work.&amp;quot;&lt;/blockquote&gt;
&lt;p&gt;He goes on to talk about some principles for programming language design:&lt;/p&gt;
&lt;blockquote&gt;
&amp;quot;Programming is not a branch of mathematics, it is a unique form of
communication in which human beings take an active role and machines
often a passive one.&amp;quot;&lt;/blockquote&gt;
&lt;div class="section" id="conclusion"&gt;
&lt;h2&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Each chapter ends with questions for managers and for programmers, to analyse
your own situation, and how the issues discussed have affected you.&lt;/p&gt;
&lt;p&gt;I came away from reading this book, recognizing many aspects of it in my own
programming career, and how even though computer terms and languages change,
humans act the same as they did back when the first edition came to print,
and there are some valuable lessons to be learned from the issues highlighted
in the book.&lt;/p&gt;
&lt;p&gt;I recommend this book not only because it was an enjoyable read,
which allows you to spot and identify situations you may find yourself in,
but how you can change your approach to working with
others and how you can improve as a programmer as well as a manager.&lt;/p&gt;
&lt;/div&gt;
</content><category term="books"></category><category term="programming"></category><category term="psychology"></category></entry><entry><title>Favourite quotes</title><link href="http://simonsblog.co.uk/favourite-quotes.html" rel="alternate"></link><published>2012-06-25T17:05:00+01:00</published><updated>2012-06-25T17:05:00+01:00</updated><author><name>Simon</name></author><id>tag:simonsblog.co.uk,2012-06-25:/favourite-quotes.html</id><summary type="html">&lt;p&gt;A selection of my favourite quotes I’ve come across recently…&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;ul class="first"&gt;
&lt;li&gt;&lt;strong&gt;L1 cache&lt;/strong&gt; - 3s grabbing a piece of paper&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L2 cache&lt;/strong&gt; - 14s picking a book from a shelf&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;System RAM&lt;/strong&gt; - 4m walk down the hall&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hard drive seek&lt;/strong&gt; - Like leaving the building to roam the
earth for one year and …&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</summary><content type="html">&lt;p&gt;A selection of my favourite quotes I’ve come across recently…&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;ul class="first"&gt;
&lt;li&gt;&lt;strong&gt;L1 cache&lt;/strong&gt; - 3s grabbing a piece of paper&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;L2 cache&lt;/strong&gt; - 14s picking a book from a shelf&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;System RAM&lt;/strong&gt; - 4m walk down the hall&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Hard drive seek&lt;/strong&gt; - Like leaving the building to roam the
earth for one year and three months&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gustavo Duarte (via Brandon Rhodes at pycon us - &lt;a class="reference external" href="http://pyvideo.org/video/717/python-linkers-and-virtual-memory"&gt;Python Linkers and
Virtual Memory&lt;/a&gt;)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“The purpose of software engineering is to control complexity, not to
create it.”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Pamela Zave (via Jon Bentley’s - &lt;a class="reference external" href="http://www.amazon.co.uk/Programming-Pearls-ACM-Press-Bentley/dp/0201657880"&gt;Programming Pearls&lt;/a&gt;)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“I think it’s better to give users the rope they want than to try and
prevent them from hanging themselves, since otherwise they’ll just
use the power cords as ropes and electrocute themselves.”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Guido van Rossum - &lt;a class="reference external" href="https://lwn.net/Articles/500485/"&gt;resolving a TZ-aware local time request&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“I think that if I was running a company like Microsoft I would ask
everyone to read Code Complete, but if I were running a start up, I
would ask no-one to read Code Complete. Code Complete is all about
being exceptionally conservative with your programming practise. If
you have a small company full of brilliant programmers you don’t
really want to tie their hands, you want to let them go as far as
they can with the language they’ve got. If you have tens of thousands
of programmers, you would like everyone to not do anything
interesting at all, to use the most basic of design patterns, to
never optimize their code because it get’s harder for the person
whose behind them or they might make a mistake during optimisation.”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Raymond Hettinger (via &lt;a class="reference external" href="http://radiofreepython.com/episodes/3/"&gt;Radio Free Python&lt;/a&gt;)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“Genius is one percent inspiration, ninety-nine percent
perspiration.”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Thomas Edison (via Linus Torvalds &lt;a class="reference external" href="http://www.youtube.com/watch?v=MShbP3OpASA"&gt;Aalto talk&lt;/a&gt;)&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“Yes, I really like Python, I like it for a very specific reason, I
like Python because of all the languages I have ever used it is the
one that maximises ease of long term maintainability. That is the
ease with which you can read your code six months later, and the
longer I program the more convinced I am that that is &lt;strong&gt;the&lt;/strong&gt; most
important metric of a language…..&lt;strong&gt;bar none&lt;/strong&gt;.”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Eric ‘ESR’ Raymond &lt;a class="reference external" href="http://youtu.be/1b17ggwkR60"&gt;presenting to the Philadelphia Area Java Users’
Group&lt;/a&gt;&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;“The cheapest, fastest and most reliable components of a computer
system are those that aren’t there.”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Gordon Bell (via Jon Bentley’s - &lt;a class="reference external" href="http://www.amazon.co.uk/Programming-Pearls-ACM-Press-Bentley/dp/0201657880"&gt;Programming Pearls&lt;/a&gt;)&lt;/p&gt;
</content><category term="python"></category><category term="quotes"></category><category term="linux"></category></entry><entry><title>git -a -m "initial commit"</title><link href="http://simonsblog.co.uk/git-a-m-initial-commit.html" rel="alternate"></link><published>2011-08-20T16:20:00+01:00</published><updated>2011-08-20T16:20:00+01:00</updated><author><name>Simon</name></author><id>tag:simonsblog.co.uk,2011-08-20:/git-a-m-initial-commit.html</id><summary type="html">&lt;p&gt;I’ve decided to set this blog up after hearing a talk given at
&lt;a class="reference external" href="http://oggcamp.org/"&gt;OggCamp&lt;/a&gt; by &lt;a class="reference external" href="http://www.lornajane.net/"&gt;LornaJane Mitchell&lt;/a&gt; entitled: careers in Open Source.&lt;/p&gt;
&lt;p&gt;It was refreshing to hear her enthusiasm for open source but also her
frankness about what got her started and what has lead on from her doing …&lt;/p&gt;</summary><content type="html">&lt;p&gt;I’ve decided to set this blog up after hearing a talk given at
&lt;a class="reference external" href="http://oggcamp.org/"&gt;OggCamp&lt;/a&gt; by &lt;a class="reference external" href="http://www.lornajane.net/"&gt;LornaJane Mitchell&lt;/a&gt; entitled: careers in Open Source.&lt;/p&gt;
&lt;p&gt;It was refreshing to hear her enthusiasm for open source but also her
frankness about what got her started and what has lead on from her doing
more in open source and how we and others can benefit from giving back
to the &lt;strong&gt;open source community&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The sunday morning (&lt;em&gt;hangover&lt;/em&gt;) slot for a talk is never the best time,
but gave what I thought and it seems &lt;a class="reference external" href="https://twitter.com/#!/search/oggcamp"&gt;others&lt;/a&gt; an inspiring talk to get
more involved with open source and so enhance not only your career
prospects but also to enhance you as a person.&lt;/p&gt;
&lt;p&gt;One of these goals is to do something like starting a blog to which this
is my attempt. Like all new things I hope it doesn’t become like a new
gym membership that sees frantic use for the first few weeks/months,
then tails off to a slow decline. I hope not, but we’ll see, with
&lt;a class="reference external" href="http://twitter.com/simhay"&gt;twitter&lt;/a&gt; / &lt;a class="reference external" href="http://identi.ca/simhay"&gt;identi.ca&lt;/a&gt; / &lt;a class="reference external" href="https://plus.google.com/"&gt;google+&lt;/a&gt; these things can all sap time, but a
point she made which I think rings true is don’t try and write the
perfect blog entry, if something worked for you blog about it, post it
and get on with your life. It may contain typos and it may not be
grammatically correct but if someone searches on google and finds your
solution can also help them with their problem, then its all good. An
&lt;em&gt;agile&lt;/em&gt; approach to blogging, release early and often.&lt;/p&gt;
&lt;p&gt;This is true for me as I often have one line solutions to problems that
I’ve found or written that I might stash away to my &lt;a class="reference external" href="https://one.ubuntu.com/"&gt;~/UbuntuOne&lt;/a&gt;
account for later reference, maybe that also needs to be added to my
blog from now on.&lt;/p&gt;
&lt;p&gt;As well as wanting to set up a blog I wanted to use &lt;a class="reference external" href="http://www.python.org/"&gt;python&lt;/a&gt;,
&lt;a class="reference external" href="http://gunicorn.org/"&gt;gunicorn&lt;/a&gt; &amp;amp; &lt;a class="reference external" href="http://nginx.net/"&gt;nginx&lt;/a&gt;, the following is a list of technologies I used:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.djangoproject.com/"&gt;django&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://nginx.net/"&gt;nginx&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://gunicorn.org/"&gt;gunicorn&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://supervisord.org/"&gt;supervisord&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://pypi.python.org/pypi/virtualenv"&gt;virtualenv&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="http://docs.fabfile.org/"&gt;fabric&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I wanted to get this blog up and running ASAP, so taken mostly from
&lt;a class="reference external" href="http://www.b-list.org/"&gt;James Bennetts&lt;/a&gt; great book &lt;a class="reference external" href="http://www.amazon.co.uk/Practical-Django-Projects-Experts-Development/dp/1430219386"&gt;Practical Django Projects&lt;/a&gt;, I purchased a
domain name, set up a &lt;a class="reference external" href="https://github.com/simonhayward/simonsblog_django"&gt;github&lt;/a&gt; repo, set up a &lt;a class="reference external" href="http://www.linode.com/"&gt;linode VPS&lt;/a&gt; and so now
have a functioning blog.&lt;/p&gt;
&lt;p&gt;It’s been fun setting this up and that’s one of the main reasons I’ve
chosen &lt;a class="reference external" href="https://www.djangoproject.com/"&gt;django&lt;/a&gt; (not only because I’ve been listening to and trying to
learn gypsy jazz guitar like the &lt;strong&gt;real&lt;/strong&gt; &lt;a class="reference external" href="http://en.wikipedia.org/wiki/Django_Reinhardt"&gt;Django Reinhardt&lt;/a&gt;) but because it
encourages reuse, simplicity and application decoupling. I love the line
taken from the &lt;a class="reference external" href="http://www.amazon.co.uk/Practical-Django-Projects-Experts-Development/dp/1430219386"&gt;Practical Django Projects&lt;/a&gt; book:&lt;/p&gt;
&lt;blockquote&gt;
&lt;em&gt;“At the end, you’ll come to a wonderful realization - that web
development is fun again”&lt;/em&gt;&lt;/blockquote&gt;
&lt;p&gt;So all of these feels a bit like starting a new project (hence git -a -m
“initial commit”), with many more commits to come..&lt;/p&gt;
</content><category term="talks"></category><category term="open source"></category><category term="oggcamp"></category><category term="blog"></category><category term="python"></category><category term="nginx"></category><category term="gunicorn"></category><category term="django"></category></entry></feed>